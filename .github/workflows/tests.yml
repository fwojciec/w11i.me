name: Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-with-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        id: test
        run: npm run test:coverage

      - name: Generate coverage summary
        id: coverage
        if: always()
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            echo "COVERAGE_SUMMARY<<EOF" >> $GITHUB_OUTPUT
            cat coverage/coverage-summary.json | jq -r '
              .total | 
              "**Coverage Summary:**\n" +
              "- **Lines:** " + (.lines.pct|tostring) + "%\n" +
              "- **Functions:** " + (.functions.pct|tostring) + "%\n" +
              "- **Branches:** " + (.branches.pct|tostring) + "%\n" +
              "- **Statements:** " + (.statements.pct|tostring) + "%"
            '
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "COVERAGE_SUMMARY=No coverage data available" >> $GITHUB_OUTPUT
          fi

      - name: Update job summary
        if: always()
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.test.outcome }}" == "success" ]; then
            echo "✅ All tests passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "${{ steps.coverage.outputs.COVERAGE_SUMMARY }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Tests failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Build, linting, and formatting are handled by Vercel deployment._" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const testSuccess = '${{ steps.test.outcome }}' === 'success';
            const coverageSummary = `${{ steps.coverage.outputs.COVERAGE_SUMMARY }}`;
            
            const testResults = testSuccess 
              ? `## 🧪 Test Results

              ✅ All tests passed

              ${coverageSummary}

              _Note: Build, linting, and formatting are handled by Vercel deployment._`
              : `## 🧪 Test Results

              ❌ Tests failed. Please check the logs above for details.

              _Note: Build, linting, and formatting are handled by Vercel deployment._`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testResults
            });
